<!DOCTYPE HTML><html><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

<title>实现Callable类</title>
    
<style id="wiz_custom_css">html, .wiz-editor-body {font-size: 12pt;}.wiz-editor-body {font-family: Helvetica, 'Hiragino Sans GB', '寰蒋闆呴粦', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;line-height: 1.7;margin: 0 auto;padding: 20px 16px;padding: 1.25rem 1rem;}.wiz-editor-body h1,.wiz-editor-body h2,.wiz-editor-body h3,.wiz-editor-body h4,.wiz-editor-body h5,.wiz-editor-body h6 {margin:20px 0 10px;margin:1.25rem 0 0.625rem;padding: 0;font-weight: bold;}.wiz-editor-body h1 {font-size:20pt;font-size:1.67rem;}.wiz-editor-body h2 {font-size:18pt;font-size:1.5rem;}.wiz-editor-body h3 {font-size:15pt;font-size:1.25rem;}.wiz-editor-body h4 {font-size:14pt;font-size:1.17rem;}.wiz-editor-body h5 {font-size:12pt;font-size:1rem;}.wiz-editor-body h6 {font-size:12pt;font-size:1rem;color: #777777;margin: 1rem 0;}.wiz-editor-body div,.wiz-editor-body p,.wiz-editor-body ul,.wiz-editor-body ol,.wiz-editor-body dl,.wiz-editor-body li {margin:8px 0;}.wiz-editor-body blockquote,.wiz-editor-body table,.wiz-editor-body pre,.wiz-editor-body code {margin:8px 0;}.wiz-editor-body .CodeMirror pre {margin:0;}.wiz-editor-body ul,.wiz-editor-body ol {padding-left:32px;padding-left:2rem;}.wiz-editor-body ol.wiz-list-level1 > li {list-style-type:decimal;}.wiz-editor-body ol.wiz-list-level2 > li {list-style-type:lower-latin;}.wiz-editor-body ol.wiz-list-level3 > li {list-style-type:lower-roman;}.wiz-editor-body blockquote {padding: 0 12px;}.wiz-editor-body blockquote > :first-child {margin-top:0;}.wiz-editor-body blockquote > :last-child {margin-bottom:0;}.wiz-editor-body img {border:0;max-width:100%;height:auto !important;margin:2px 0;}.wiz-editor-body table {border-collapse:collapse;border:1px solid #bbbbbb;}.wiz-editor-body td,.wiz-editor-body th {padding:4px 8px;border-collapse:collapse;border:1px solid #bbbbbb;min-height:28px;word-break:break-word;box-sizing: border-box;}.wiz-hide {display:none !important;}</style></head>

<body class="wiz-editor-body" spellcheck="false" ><div>public <span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);"><b>class Race</b></span>  implements Callable&lt;Integer&gt;{</div><div>&nbsp; &nbsp; private String name;//名称</div><div>&nbsp; &nbsp; private long time;//延时时间</div><div>&nbsp; &nbsp; private boolean flag=true;</div><div>&nbsp; &nbsp; private int step=0;</div><div><br></div><div>&nbsp; &nbsp; public Race() {</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; public Race(String name) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; super();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.name = name;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; public Race(String name, long time) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; super();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.name = name;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.time = time;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; public void setFlag(boolean flag) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.flag = flag;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; public int getStep() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; return step;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; @Override</div><div>&nbsp; &nbsp; public Integer call() throws Exception {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; while(flag){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(time);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; step++;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; return step;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>public class <span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);"><b>CallTest</b></span> {</div><div>&nbsp; &nbsp; public static void main(String[] args) throws ExecutionException, InterruptedException {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; ExecutorService ets= Executors.newFixedThreadPool(2);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Race tortle=new Race("乌龟",1000);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Race rabbit=new Race("兔子",500);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Future&lt;Integer&gt; resul1=ets.submit(tortle);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Future&lt;Integer&gt; resul02=ets.submit(rabbit);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; tortle.setFlag(false);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; rabbit.setFlag(false);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; int num1=resul1.get();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; int num2=resul02.get();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(num1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(num2);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; ets.shutdownNow();</div><div>&nbsp; &nbsp; }</div><div>}</div><div><br></div><div><br></div></body></html>