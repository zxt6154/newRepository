<!DOCTYPE HTML><html><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

<title>JdbcTemplateUtil</title>
    
<style id="wiz_custom_css">html, .wiz-editor-body {font-size: 12pt;}.wiz-editor-body {font-family: Helvetica, 'Hiragino Sans GB', '寰蒋闆呴粦', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;line-height: 1.7;margin: 0 auto;padding: 20px 16px;padding: 1.25rem 1rem;}.wiz-editor-body h1,.wiz-editor-body h2,.wiz-editor-body h3,.wiz-editor-body h4,.wiz-editor-body h5,.wiz-editor-body h6 {margin:20px 0 10px;margin:1.25rem 0 0.625rem;padding: 0;font-weight: bold;}.wiz-editor-body h1 {font-size:20pt;font-size:1.67rem;}.wiz-editor-body h2 {font-size:18pt;font-size:1.5rem;}.wiz-editor-body h3 {font-size:15pt;font-size:1.25rem;}.wiz-editor-body h4 {font-size:14pt;font-size:1.17rem;}.wiz-editor-body h5 {font-size:12pt;font-size:1rem;}.wiz-editor-body h6 {font-size:12pt;font-size:1rem;color: #777777;margin: 1rem 0;}.wiz-editor-body div,.wiz-editor-body p,.wiz-editor-body ul,.wiz-editor-body ol,.wiz-editor-body dl,.wiz-editor-body li {margin:8px 0;}.wiz-editor-body blockquote,.wiz-editor-body table,.wiz-editor-body pre,.wiz-editor-body code {margin:8px 0;}.wiz-editor-body .CodeMirror pre {margin:0;}.wiz-editor-body ul,.wiz-editor-body ol {padding-left:32px;padding-left:2rem;}.wiz-editor-body ol.wiz-list-level1 > li {list-style-type:decimal;}.wiz-editor-body ol.wiz-list-level2 > li {list-style-type:lower-latin;}.wiz-editor-body ol.wiz-list-level3 > li {list-style-type:lower-roman;}.wiz-editor-body blockquote {padding: 0 12px;}.wiz-editor-body blockquote > :first-child {margin-top:0;}.wiz-editor-body blockquote > :last-child {margin-bottom:0;}.wiz-editor-body img {border:0;max-width:100%;height:auto !important;margin:2px 0;}.wiz-editor-body table {border-collapse:collapse;border:1px solid #bbbbbb;}.wiz-editor-body td,.wiz-editor-body th {padding:4px 8px;border-collapse:collapse;border:1px solid #bbbbbb;min-height:28px;word-break:break-word;box-sizing: border-box;}.wiz-hide {display:none !important;}</style></head>

<body class="wiz-editor-body" spellcheck="false" ><div><font face="MV Boli">package com.itheima.manager.utils;</font></div><div><font face="MV Boli"><br></font></div><div><font face="MV Boli">import com.mchange.v2.c3p0.ComboPooledDataSource;</font></div><div><font face="MV Boli">import javax.sql.DataSource;</font></div><div><font face="MV Boli">import java.sql.Connection;</font></div><div><font face="MV Boli">import java.sql.ResultSet;</font></div><div><font face="MV Boli">import java.sql.Statement;</font></div><div><font face="MV Boli"><br></font></div><div><font face="MV Boli">/**</font></div><div><font face="MV Boli">&nbsp;* @author buguniao</font></div><div><font face="MV Boli">&nbsp;* @date 2018-07-01:10:51</font></div><div><font face="MV Boli">&nbsp;* @copy</font></div><div><font face="MV Boli">&nbsp;*/</font></div><div><font face="MV Boli">public class JdbcTemplateUtil {</font></div><div><font face="MV Boli">&nbsp; &nbsp; //创建c3p0核心类对象</font></div><div><font face="MV Boli">&nbsp; &nbsp; private static ComboPooledDataSource cpds = new ComboPooledDataSource();</font></div><div><font face="MV Boli">&nbsp; &nbsp; // 定义一个静态方法对外提供连接</font></div><div><font face="MV Boli">&nbsp; &nbsp; public static Connection getConnection() {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; try {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //从c3p0数据库连接池获取连接</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Connection conn = cpds.getConnection();</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return conn;</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw new RuntimeException(e);</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; }</font></div><div><font face="MV Boli">&nbsp; &nbsp; }</font></div><div><font face="MV Boli">&nbsp; &nbsp; //定义一个静态方法让外界获取数据库连接池对象</font></div><div><font face="MV Boli">&nbsp; &nbsp; public static DataSource getDataSource()</font></div><div><font face="MV Boli">&nbsp; &nbsp; {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; return cpds;</font></div><div><font face="MV Boli">&nbsp; &nbsp; }</font></div><div><font face="MV Boli"><br></font></div><div><font face="MV Boli">&nbsp; &nbsp; // 定义一个静态方法让外界关闭资源</font></div><div><font face="MV Boli">&nbsp; &nbsp; public static void release(Connection conn, Statement st, ResultSet rs) {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; try {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 关闭资源</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (conn != null) {</font></div><div><font face="MV Boli"><br></font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn.close();</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO Auto-generated catch block</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; }</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; try {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 关闭资源</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (st != null) {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; st.close();</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO Auto-generated catch block</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; }</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; try {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 关闭资源</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (rs != null) {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rs.close();</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO Auto-generated catch block</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();</font></div><div><font face="MV Boli">&nbsp; &nbsp; &nbsp; &nbsp; }</font></div><div><font face="MV Boli">&nbsp; &nbsp; }</font></div><div><font face="MV Boli">}</font></div></body></html>