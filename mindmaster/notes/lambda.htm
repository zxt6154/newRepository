<!DOCTYPE HTML><html><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

<title>Oct-19</title>
    
<style id="wiz_custom_css">html, .wiz-editor-body {font-size: 12pt;}.wiz-editor-body {font-family: Helvetica, 'Hiragino Sans GB', '寰蒋闆呴粦', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;line-height: 1.7;margin: 0 auto;padding: 20px 16px;padding: 1.25rem 1rem;}.wiz-editor-body h1,.wiz-editor-body h2,.wiz-editor-body h3,.wiz-editor-body h4,.wiz-editor-body h5,.wiz-editor-body h6 {margin:20px 0 10px;margin:1.25rem 0 0.625rem;padding: 0;font-weight: bold;}.wiz-editor-body h1 {font-size:20pt;font-size:1.67rem;}.wiz-editor-body h2 {font-size:18pt;font-size:1.5rem;}.wiz-editor-body h3 {font-size:15pt;font-size:1.25rem;}.wiz-editor-body h4 {font-size:14pt;font-size:1.17rem;}.wiz-editor-body h5 {font-size:12pt;font-size:1rem;}.wiz-editor-body h6 {font-size:12pt;font-size:1rem;color: #777777;margin: 1rem 0;}.wiz-editor-body div,.wiz-editor-body p,.wiz-editor-body ul,.wiz-editor-body ol,.wiz-editor-body dl,.wiz-editor-body li {margin:8px 0;}.wiz-editor-body blockquote,.wiz-editor-body table,.wiz-editor-body pre,.wiz-editor-body code {margin:8px 0;}.wiz-editor-body .CodeMirror pre {margin:0;}.wiz-editor-body ul,.wiz-editor-body ol {padding-left:32px;padding-left:2rem;}.wiz-editor-body ol.wiz-list-level1 > li {list-style-type:decimal;}.wiz-editor-body ol.wiz-list-level2 > li {list-style-type:lower-latin;}.wiz-editor-body ol.wiz-list-level3 > li {list-style-type:lower-roman;}.wiz-editor-body blockquote {padding: 0 12px;}.wiz-editor-body blockquote > :first-child {margin-top:0;}.wiz-editor-body blockquote > :last-child {margin-bottom:0;}.wiz-editor-body img {border:0;max-width:100%;height:auto !important;margin:2px 0;}.wiz-editor-body table {border-collapse:collapse;border:1px solid #bbbbbb;}.wiz-editor-body td,.wiz-editor-body th {padding:4px 8px;border-collapse:collapse;border:1px solid #bbbbbb;min-height:28px;word-break:break-word;box-sizing: border-box;}.wiz-hide {display:none !important;}</style></head>

<body class="wiz-editor-body" spellcheck="false" ><div><span data-wiz-span="data-wiz-span" style="font-family: 黑体; color: rgb(51, 51, 153); font-size: 1.167rem;"><b>lambda函数</b></span></div><div><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">（一）</span></div><div><span data-wiz-span="data-wiz-span"><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-family: 黑体; font-size: 0.917rem;">//通过调用一个getData方法来获取Lambda的内容</span></pre><pre><font face="黑体"><span style="font-size: 0.917rem; line-height: 24.9424px;"><span data-wiz-span="data-wiz-span">//接口方法有返回值，无参数 </span></span></font></pre><pre><font face="黑体"><span style="font-size: 0.917rem; line-height: 24.9424px;"><pre style="font-family: 宋体; font-size: 0.75rem;"><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public interface </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">MySupplier {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    Object get();</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span></pre><br></span></font><span style="font-size: 0.75rem; color: rgb(0, 0, 128);"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public class </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">LambdaTest01{</span><font face="宋体"><span style="font-size: 0.75rem;"><br></span></font><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">//方法调方法</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span></span><span style="font-size: 0.75rem; color: rgb(0, 0, 128);"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">private static </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">MySupplier getData(){</span><font face="宋体"><span style="font-size: 0.75rem;"><br></span></font><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        </span><span style="font-size: 0.75rem; color: rgb(0, 0, 128);"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">return </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">()-&gt;</span><span style="font-size: 0.75rem; color: rgb(0, 128, 0);"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">"hello"</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">;</span><font face="宋体"><span style="font-size: 0.75rem;"><br></span></font><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">       </span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">/* return new MySupplier() {</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">            @Override</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">            public Object get() {</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">                return "hello";</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">            }</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        };*/</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span><font face="宋体"><span style="font-size: 0.75rem;"><br></span></font><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">/*private void printData(MySupplier supplier){</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        System.out.println(getData());</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    }</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">*/</span></span></pre><pre><span style="color: rgb(128, 128, 128); font-style: italic;"><font face="楷体"><span style="font-size: 0.833rem; line-height: 22.6576px;"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 147, 0);">//接收MySupplier接口，</span></span></font></span><span style="font-size: 0.833rem; line-height: 22.6576px; font-style: italic;"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 147, 0);">getData()方法即返回接口MySupplier</span></span><span style="color: rgb(128, 128, 128); font-style: italic;"><font face="楷体"><span style="font-size: 0.833rem; line-height: 22.6576px;"><br></span></font></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span></span><span style="font-size: 0.75rem; color: rgb(0, 0, 128);"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">private static void </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">printData(MySupplier supplier){</span><font face="宋体"><span style="font-size: 0.75rem;"><br></span></font><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        System.</span><span style="font-size: 0.75rem; color: rgb(102, 14, 122); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">out</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">.println(supplier.get());</span><font face="宋体"><span style="font-size: 0.75rem;"><br></span></font><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    }</span><font face="宋体"><span style="font-size: 0.75rem;"><br><br></span></font><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span><span style="font-size: 0.75rem; color: rgb(0, 0, 128);"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public static void </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">main(String[] args) {</span><font face="宋体"><span style="font-size: 0.75rem;"><br></span></font><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">          </span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">/* printData(new MySupplier() {</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">               @Override</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">               public Object get() {</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">                   return "hello";</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">               }</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">           });*/</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem; color: rgb(0, 147, 0);">//getData()方法已重写接口内方法，所以此运行结果即getData()内写好的方法</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        </span></span><span style="font-size: 0.75rem; font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">printData</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">(</span><span style="font-size: 0.75rem; font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">getData</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">());</span><font face="宋体"><span style="font-size: 0.75rem;"><br><br></span></font><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    }</span><font face="宋体"><span style="font-size: 0.75rem;"><br></span></font><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span><font face="宋体"><span style="font-size: 0.75rem;"><br></span></font></pre><pre><font face="楷体"><span style="font-size: 0.833rem; line-height: 22.6576px;">（二）接口方法带参数，无返回值</span></font></pre><pre><font face="楷体"><span style="font-size: 0.833rem; line-height: 22.6576px;"><pre style="font-family: 宋体; font-size: 0.75rem;"><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public interface </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">Printable {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">void </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">print(String str);</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span><br></pre><br></span></font></pre><pre><font face="楷体"><span style="line-height: 22.6576px;"><pre style="font-size: 0.75rem; font-family: 宋体;"><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public class </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">PrintSimple {</span><br><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public static </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">Printable PrintProxy(){</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">   </span><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">return </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">(String str)-&gt;{</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">       System.</span><span style="color:#660e7a;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">out</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">.println(</span><span style="color:#008000;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">"hello"</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">+</span><span style="color:#008000;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">" "</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">+str);</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">   };</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span><br><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public static void </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">PrintToConsole(Printable pt,String str){</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">      pt.print(str);</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public static void </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">main(String[] args) {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        String str=</span><span style="color:#008000;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">"java"</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">;</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        </span><span style="font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">PrintToConsole</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">(</span><span style="font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">PrintProxy</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">(),str);</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    }</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">   1.先重写接口方法再调到其他方法；2.在测试类里重写</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-family: 黑体; font-size: 1.167rem; color: rgb(51, 51, 153);"><b>方法引用</b></span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-family: 仿宋; font-size: 1.167rem; color: rgb(51, 51, 153);">    <span data-wiz-span="data-wiz-span" style="color: rgb(192, 192, 192);"> </span></span><span data-wiz-span="data-wiz-span" style="font-size:0.833rem;color:rgb(60, 179, 113)">一个类的方法和一个接口的方法有相同参数相关联，测试类中有一个静态方法其参数是这个接口，那么调用这个静态方法后一定需要重写接口内方法</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem; color: rgb(60, 179, 113);">此接口内方法就可以用</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem; color: rgb(60, 179, 113);">1.匿名内部类</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem; color: rgb(60, 179, 113);">2.lambda函数</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem; color: rgb(60, 179, 113);">3.方法引用</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem; color: rgb(60, 179, 113);">实现</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem; color: rgb(60, 179, 113);">当想要引用类的方法时：静态方法名（类对象名::类方法）</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem; color: rgb(51, 51, 153);"><br></span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-family: 黑体; color: rgb(51, 51, 153); font-size: 0.833rem;">  </span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">  例（一）</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">@FunctionalInterface</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public interface Printable {</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">void print(String str);</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public class Demo01PrintSimple {</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">private static void printString(Printable data) {</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">data.print("Hello, World!");</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public static void main(String[] args) {</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">printString(s ‐&gt; System.out.println(s));</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">以上其实可直接控制台输出，即需要引用System.out这个类对象的Println()方法，lambda在这里显得冗余 改进 printString(System.out::println）</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">如果lambda要表达的方案已经存在于某个方法的实现中，那么可以用：：来引用该方法作为lambda的取代</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.917rem;">通过对象名引用成员方法</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.917rem;">      例</span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.917rem;"><pre style="font-size: 0.75rem;"><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public interface </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">Printab {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">void </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">print(String str);</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span></pre></span></pre><pre><span data-wiz-span="data-wiz-span"><pre style="font-family: 宋体; font-size: 0.75rem;"><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public class </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">Printsim {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">private static void </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">printStr(Printab data) {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        data.print(</span><span style="color:#008000;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">"Hello, World!"</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">);</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    }</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public static void </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">main(String[] args) {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">            </span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">//printStr(s-&gt;System.out.println(s));</span></span><span style="color:#808080;font-style:italic;"><br></span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">       // printStr(System.out::println);</span></span><span style="color:#808080;font-style:italic;"><br></span><span style="color:#808080;font-style:italic;"><br></span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        /*</span></span><span style="color:#808080;font-style:italic;"><br></span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        接口：printab     实现此接口方法分静态方法：printStr</span></span><span style="color:#808080;font-style:italic;"><br></span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        在控制台打印或真正应用此方法还需要一个实现此接口的类重写这个接口内方法</span></span><span style="color:#808080;font-style:italic;"><br></span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        1.匿名内部类实现；</span></span></pre><pre style="font-family: 宋体; font-size: 0.75rem;"><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        2,.lambda表达式；printStr(s-&gt;System.out.println(s));</span></span></pre><pre><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        3.方法引用 printStr(System.out::println);System.out是一个静态类对象，</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        println()是此类一个重载方法和接口Printab中print方法作用一致</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        */</span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        </span></span><span style="font-family: 宋体; font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><br></span><span style="font-size: 0.75rem; color: rgb(128, 128, 128); font-style: italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span><font face="宋体"><span style="font-size: 0.75rem;"><br></span></font><span data-wiz-span="data-wiz-span" style="font-size: 0.75rem;">}</span><font face="宋体"><span style="font-size: 0.75rem;"><br></span></font></pre><pre style="font-family: 宋体; font-size: 0.75rem;"><span data-wiz-span="data-wiz-span">（二）</span></pre><pre style="font-family: 宋体; font-size: 0.75rem;"><span data-wiz-span="data-wiz-span"><pre><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public class </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">MethodRef {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">//接口仍然是Printab</span></span><span style="color:#808080;font-style:italic;"><br></span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span></span><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">private static void </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">printString(Printable lambda) {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        lambda.print(</span><span style="color:#008000;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">"Hello"</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">);</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    }</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public static void </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">main(String[] args) {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        </span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">//MethodRefObject类对象打印字符串的大写形式 obj,UpperCase</span></span><span style="color:#808080;font-style:italic;"><br></span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">MethodRefObject obj = </span><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">new </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">MethodRefObject();</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        </span><span style="font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">printString</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">(obj::printUpperCase);</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        </span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">//MethodRefObject内方法和匿名内部类方法重复</span></span><span style="color:#808080;font-style:italic;"><br></span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        </span></span><span style="font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">printString</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">((String str)-&gt;{</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">           System.</span><span style="color:#660e7a;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">out</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">.println(str.toUpperCase());</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">          </span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">//  str.toUpperCase();</span></span><span style="color:#808080;font-style:italic;"><br></span><span style="color:#808080;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">});</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    }</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;"> </span><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">class </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">MethodRefObject {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    </span><span style="color:#000080;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">public void </span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">printUpperCase(String str) {</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">        System.</span><span style="color:#660e7a;font-style:italic;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">out</span></span><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">.println(str.toUpperCase());</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">    }</span><br><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;">}</span><br></pre><pre style="font-family: 宋体;"><br></pre><pre style="font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-family:黑体;font-size:1.167rem"><b><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 128);"> </span></b></span></pre><pre style="font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-family:黑体;font-size:1.167rem"><b><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 128);"><br></span></b></span></pre><br></span></pre><font face="楷体"><span style="font-size: 0.917rem;"><br></span></font></span></pre><pre style="font-size: 0.75rem; font-family: 宋体;"><span data-wiz-span="data-wiz-span" style="font-size: 0.833rem;"><br></span></pre><span style="font-size: 0.833rem;"><br></span></span></font></pre></span></div></body></html>